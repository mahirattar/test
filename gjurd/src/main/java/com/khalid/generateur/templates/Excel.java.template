package ma.kapisoft.gjurd.excel;

import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.List;

import ma.kapisoft.gjurd.dao.##ENTITY##Dao;
##IMPORT_DAO##
import ma.kapisoft.gjurd.entities.##ENTITY##;
##IMPORT_ENTITIES##
import ma.kapisoft.gjurd.exception.GenericException;
import ma.kapisoft.gjurd.util.Hashage;
import ma.kapisoft.gjurd.util.StringUtil;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.hibernate.exception.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;



@Component
public class ##ENTITY##Excel extends ManipExcel<##ENTITY##> {
	private static final Log log = LogFactory.getLog(##ENTITY##Excel.class);
	
	private static final int ATTRIBUTE_UNIQUE_NUM=##ATTRIBUTE_UNIQUE_NUM##;
	

	
	##ATTRIBUTES_CONSTANTES_NAME##
	

	
	@Autowired
	private ##ENTITY##Dao dao;
	
    ##ATTRIBUTES_DAO##
	
	public ##ENTITY##Dao getDao() {
		return dao;
	}

	public void setDao(##ENTITY##Dao dao) {
		this.dao = dao;
	}
	
	 ##GETTERS_DAO##
	


	public ##ENTITY##Excel() {
		super(##ENTITY##.class);
	
	}


    ##READ_ATTRIBURTE##
	
		
	
	@Override
	protected boolean readCell(XSSFCell cell, String attribute, ##ENTITY## t,
			List<MessageExcel> msgs, int rownum) {
		boolean error=true;
		if(attribute.equals(ATTRIBUTE_ID))
		{
			error=readNumberNotNull(cell, attribute, t, msgs, rownum);
		}
		##IF_ATTRIBUTES##
		return error;
		
	}
	
	

	@Override
	protected ##ENTITY## rechercher(XSSFRow row) {
		// TODO Auto-generated method stub
		return dao.findBy##ATTRIBUTE_UNIQUE##(row.getCell(ATTRIBUTE_UNIQUE_NUM).getStringCellValue());
	}

	

	

}
